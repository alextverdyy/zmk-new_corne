#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <1 0 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 42 43 44>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 46 45 47>;
        };

        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <135>;
            flavor = "tap-preferred";
            bindings = <&shifted>, <&kp>;
        };

        Mouse_click: Mouse_click {
            compatible = "zmk,behavior-tap-dance";
            label = "MOUSE_CLICK";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>, <&mkp RCLK>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        passwd: passwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&OSM_HYPR &kp P>;
            label = "PASSWD";
        };

        SCRSH: SCRSH {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&OSM_HYPR &kp S>;
            label = "SCRSH";
        };

        OSM_HYPR: OSM_HYPR {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LS(LA(LC(LGUI)))>;
            label = "OSM_HYPR";
        };

        IMP_8: IMP_8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <>;
            label = "IMP_8";
        };

        IMP_6: IMP_6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "IMP_6";
        };

        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q            &kp W              &kp E            &kp R                &kp T                               &kp UP                &kp Y        &kp U                 &kp I             &kp O               &kp P                &kp BSPC
&td0       &hml LEFT_ALT A  &hml LEFT_SHIFT S  &hml LEFT_GUI D  &hml LEFT_CONTROL F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &hmr RIGHT_CONTROL J  &hmr RIGHT_GUI K  &hmr RIGHT_SHIFT L  &hmr RIGHT_ALT SEMI  &as SQT
&kp LCTRL  &kp Z            &kp X              &kp C            &kp V                &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M                 &as COMMA         &as DOT             &as FSLH             &kp ESC
                                               &kp LGUI         &mo 1                &lt 3 ENTER                                               &lt 3 SPACE  &mo 2                 &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4   &kp N5                                   &mmv MOVE_UP                     &kp N6   &kp N7    &kp N8    &kp N9     &kp N0    &kp BSPC
&trans  &kp N4  &kp N5  &kp N6  &passwd  &SCRSH                   &mmv MOVE_LEFT  &Mouse_click    &mmv MOVE_RIGHT  &IMP_8   &none     &as UP    &none      &kp HOME  &as LS(GRAVE)
&trans  &kp N7  &kp N8  &kp N9  &kp N0   &OSM_HYPR  &kp C_MUTE                    &mmv MOVE_DOWN                   &IMP_6   &as LEFT  &as DOWN  &as RIGHT  &kp END   &kp ESC
                        &trans  &trans   &trans                                                                    &as INS  &kp DEL   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &as EXCL      &as AT           &as HASH    &as DLLR    &as PRCNT                            &mmv MOVE_UP                     &as CARET  &as AMPS   &as ASTRK  &as LPAR  &as RPAR  &as BSPC
&trans  &bt BT_CLR    &rgb_ug RGB_TOG  &kp MCLK    &kp RCLK    &kp MB4              &mmv MOVE_LEFT  &kp LCLK        &mmv MOVE_RIGHT  &as MINUS  &as EQUAL  &as LBKT   &as RBKT  &as BSLH  &as GRAVE
&trans  &out OUT_USB  &out OUT_BLE     &bt BT_PRV  &bt BT_NXT  &kp MB5    &trans                    &mmv MOVE_DOWN                   &as UNDER  &as PLUS   &as LBRC   &as RBRC  &as PIPE  &as TILDE
                                       &trans      &trans      &as SPACE                                                             &as RET    &trans     &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp LG(NUMBER_1)  &kp LG(N1)  &kp LG(N2)   &kp LG(N3)  &kp LG(N4)                                &mmv MOVE_UP                     &as F6       &as F7    &as F8       &as F9      &as F10          &as F11
&trans          &trans            &kp LCLK    &kp MCLK     &kp RCLK    &kp MB4                   &mmv MOVE_LEFT  &kp LCLK        &mmv MOVE_RIGHT  &bootloader  &kp LCLK  &kp MCLK     &kp RCLK    &kp PRINTSCREEN  &as F12
&trans          &sys_reset        &trans      &bootloader  &trans      &kp MB5     &as C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans    &bootloader  &sys_reset  &as SCROLLLOCK   &as PAUSE_BREAK
                                              &trans       &trans      &trans                                                                     &trans       &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
